name: $(BuildID)

trigger:
  batch: true
  branches:
    include:
      - 'main'
  paths:
    include:
      - .azuredevops/*
      - adp-helm-library/*
      - scripts/*

pr:
  branches:
    include:
      - main
  paths:
    include:
      - .azuredevops/*
      - adp-helm-library/*
      - scripts/*

pool:
  vmImage: windows-latest

variables:
  - name: HelmChartRepoPublic
    value: "https://raw.githubusercontent.com/defra/adp-helm-repository/main/"

resources:
  repositories:
    - repository: ADPHelmRepository
      name: defra/adp-helm-repository
      endpoint: DEFRA
      type: github
      ref: main

steps:
  - checkout: self
    persistCredentials: true
    path: ADPHelmLibrary

  - checkout: ADPHelmRepository
    persistCredentials: true
    path: ADPHelmRepository  

  - powershell: |
      $lintPath = "$(Agent.BuildDirectory)\ADPHelmLibrary\adp-helm-library"
      Write-Host 'Helm lint: Path = ' $lintPath
      Helm lint $lintPath
      Write-Host 'Helm lint: End'
    displayName: 'Helm lint'   

  - task: PowerShell@2
    displayName: 'Check Chart version Incremented'
    condition: succeeded()
    inputs:
      pwsh: true
      azurePowerShellVersion: latestVersion
      targetType: 'filePath'
      filePath: $(Agent.BuildDirectory)\ADPHelmLibrary\scripts\Verify-ChartVersion.ps1
      arguments: >
        -HelmLibraryPath "$(Agent.BuildDirectory)\ADPHelmLibrary\adp-helm-library"
      workingDirectory: $(Agent.BuildDirectory)\ADPHelmLibrary  

  - task: PowerShell@2
    displayName: 'Publish Helm Chart to Helm Repositiry(Github)'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    inputs:
      pwsh: true
      azurePowerShellVersion: latestVersion
      targetType: 'filePath'
      filePath: $(Agent.BuildDirectory)\ADPHelmLibrary\scripts\Publish-HelmLibrary.ps1
      arguments: >
        -HelmLibraryPath "$(Agent.BuildDirectory)\ADPHelmLibrary\adp-helm-library"
        -ChartVersion $(ChartCurrentVersion)
        -HelmChartRepoPublic $(HelmChartRepoPublic)
      workingDirectory: $(System.DefaultWorkingDirectory) 